from typing import Any
from typing import Dict
from typing import Sequence

import requests

ENDPOINT = "http://localhost:8000/embed"
HELLO_WORLD_EMBEDDED = "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"
WHATS_UP_WORLD_EMBEDDED = "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"
# Some random UUID4s.
MOCK_QUERY_ID = "b34ae2f3-e954-4243-b23a-7554de390307"
MOCK_QUERY_BATCH_ID = "fc28d96a-de2c-490b-ba21-458c8786efee"
MOCK_HEADERS = {
    "sf-external-function-current-query-id": MOCK_QUERY_ID,
    "sf-external-function-query-batch-id": MOCK_QUERY_BATCH_ID,
}


def run_batch(texts: Sequence[str]) -> Dict[Any, Any]:
    json_payload = {"data": [[i, text] for i, text in enumerate(texts)]}
    result = requests.post(ENDPOINT, json=json_payload, headers=MOCK_HEADERS)
    assert result.status_code == 200
    result_json = result.json()
    return result_json


def test_hello_world():
    result_json = run_batch(["Hello, world!"])
    assert result_json == {"data": [[0, HELLO_WORLD_EMBEDDED]]}
    result_json = run_batch(["What's up, world?"])
    assert result_json == {"data": [[0, WHATS_UP_WORLD_EMBEDDED]]}
